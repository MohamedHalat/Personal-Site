package mario;
import javax.swing.*;
import java.awt.*;
import Mario.Characters.*;
import Mario.Objects.*;

/**
 * Write a description of class Scene here.
 *
 * @author (your name)
 * @version (a version number or a date)
 */
public class Scene extends JPanel
{
    private ImageIcon iconBack;
    private Image imgBack1;
    private Image imgBack2;

    private ImageIcon iconLogo, iconArrow, iconCastle, iconCastleR, iconFloor;
    private Image imgLogo, imgArrow, imgCastle, imgCastleR, imgFloor;

    private ImageIcon iconGoomba, iconMario;
    private Image imgGoomba, imgMario;

    private int backx1;
    private int backx2;
    private int objx; //PosX
    private int moveBx; //dx
    public int marioy = 332;
    private int ceillingY;
    private int floorY;
    private boolean counter = true;

    public String strMario;
    public static String strMarioS;
    public Mario mario;
    public Mushroom mushroom;
    public Goomba[] goomba;
    public Pipe[] pipe;
    public Block[] blocks;
    public itemBlock[] itemBlocks;
    private Image imgCoin;
    private ImageIcon iconCoin;
    private int height;
    final public int screen = 869*2;
    final public int screenHeight = 232*2;
    final public int Floor = 400;
    private boolean checker = true;
    private boolean checker2 = true;
    private int addY = 0;
    private int numGoomba;
    private int time = 0;
    //constructer
    public Scene (){
        super();

        this.setFocusable(true);
        this.requestFocusInWindow();
        this.addKeyListener(new Keyboard());

        strMario = "marioSmall";
        this.strMarioS = strMario;
        this.backx1 = -50;
        this.backx2 = screen-50;
        this.objx = -1; 
        this.moveBx = 0; 
        this.ceillingY = -100;
        this.floorY = Floor;
        this.height = 68;
        Images();

        Classes();

        Thread clockScreen = new Thread(new Clock());
        clockScreen.start();
    }

    public void Images(){
        this.iconCoin = new ImageIcon ("coin.png");
        this.imgCoin = this.iconCoin.getImage();

        iconBack = new ImageIcon ("background.png"); //y 400 = floor
        imgBack1 = this.iconBack.getImage();
        imgBack2 = this.iconBack.getImage();

        iconLogo = new ImageIcon ("logo.png");
        imgLogo = this.iconLogo.getImage();
        iconArrow = new ImageIcon ("arrow.png");
        imgArrow = this.iconArrow.getImage();
        iconCastle = new ImageIcon ("Castle.png");
        imgCastle = this.iconCastle.getImage();
        iconCastleR = new ImageIcon ("castleRight.png");
        imgCastleR = this.iconCastleR.getImage();

        iconGoomba = new ImageIcon ("GoombaDead.png");
        imgGoomba = iconGoomba.getImage();
    }

    public void Classes(){
        mario = new Mario(200,Floor - (this.height), 40 ,this.height);
        goomba = new Goomba[10];

        pipe = new Pipe[6];
        blocks = new Block[27];
        itemBlocks = new itemBlock[16];
        mushroom = new Mushroom(1860,400-30);

        blocks [0] = new Block(936,260);
        blocks [1] = new Block(1008,260);
        blocks [2] = new Block(1078,260);

        itemBlocks [0] = new itemBlock(800,260);
        itemBlocks [1] = new itemBlock(1008,100);
        itemBlocks [2] = new itemBlock(2900,260);
        itemBlocks [3] = new itemBlock(3300,260);

        pipe[0] = new Pipe (1300,400-96);
        pipe[1] = new Pipe (1800,400-96);
        pipe[2] = new Pipe (2200,400-96);
        pipe[3] = new Pipe (2600,400-96);

        goomba[0] = new Goomba(1400,Floor-40);
        goomba[1] = new Goomba(1750,Floor-40);
        goomba[2] = new Goomba(1850,Floor-40);
        goomba[3] = new Goomba(1950,Floor-40);
    }

    //getters
    public int getMoveBx(){return moveBx;}

    public int getObjX(){return objx;}

    public int getCeillingY(){return ceillingY;}

    public int getFloorY(){return floorY;}

    public int getAddY(){return addY;}

    public int getNumGoomba(){return numGoomba;}
    //setters

    public void setMoveBx(int moveBx){this.moveBx = moveBx;}

    public void setimgMario(Image imgMario){this.imgMario = imgMario;}

    public void setObjX(int objx){this.objx = objx;}

    public void setCeillingY(int ceillingY){this.ceillingY = ceillingY;}

    public void setFloorY(int floorY){this.floorY = floorY;}

    public void collisions(){
        if (this.mario.closeTo(blocks[0]))
            this.mario.contact(blocks[0]);
        else if (this.mario.closeTo(blocks[1]))
            this.mario.contact(blocks[1]);
        else if (this.mario.closeTo(blocks[2]))
            this.mario.contact(blocks[2]);
        else if (this.mario.closeTo(blocks[2]))
            this.mario.contact(blocks[2]);

        else if (this.mario.closeTo(itemBlocks[0]))
            this.mario.contact(itemBlocks[0]);
        else if (this.mario.closeTo(itemBlocks[1]))
            this.mario.contact(itemBlocks[1]);
        else if (this.mario.closeTo(itemBlocks[2]))
            this.mario.contact(itemBlocks[2]);
        else if (this.mario.closeTo(itemBlocks[3]))
            this.mario.contact(itemBlocks[3]);

        else if (this.mario.closeTo(pipe[0]))
            this.mario.contact(pipe[0]);  
        else if (this.mario.closeTo(pipe[1]))
            this.mario.contact(pipe[1]);  
        else if (this.mario.closeTo(pipe[2]))
            this.mario.contact(pipe[2]);  
        else if (this.mario.closeTo(pipe[3]))
            this.mario.contact(pipe[3]);  
        else{
            ceillingY = -100;
            floorY = Floor;
        }

        for (int i = 0; i <= 3; i++){
            this.numGoomba = i;
            if (this.goomba[i].closeTo(pipe[0]))
                this.goomba[i].contactTo(pipe[0]);
            else if (this.goomba[i].closeTo(pipe[1]))
                this.goomba[i].contactTo(pipe[1]);
            else if (this.goomba[i].closeTo(pipe[2]))
                this.goomba[i].contactTo(pipe[2]);
            if (goomba[i].getHealth(i) != 0 && this.mario.closeTo(goomba[i])){
                this.mario.contact(goomba[i],-1);
            }
            if (goomba[i].getHealth(i) != 0 && this.goomba[i].closeTo(mario)){
                this.goomba[i].contactTo(mario);
            }
        }

        if (this.mushroom.closeTo(pipe[1]))
            this.mushroom.contactTo(pipe[1]);
        else if (this.mushroom.closeTo(pipe[2]))
            this.mushroom.contactTo(pipe[2]);
        if ( this.mario.closeTo(mushroom) && this.mario.health == 1){
            this.mario.contact(mushroom,1);
        }

        if (this.goomba[0].closeTo(goomba[1]) && goomba[1].getHealth(1) != 0 && goomba[0].getHealth(0) != 0)
            this.goomba[0].contactTo(goomba[1]);
        if (this.goomba[1].closeTo(goomba[0]) && goomba[0].getHealth(0) != 0 && goomba[1].getHealth(1) != 0)
            this.goomba[1].contactTo(goomba[0]);

        if (this.goomba[2].closeTo(goomba[3]) && goomba[3].getHealth(3) != 0 && goomba[2].getHealth(2) != 0)
            this.goomba[2].contactTo(goomba[1]);
        if (this.goomba[3].closeTo(goomba[2]) && goomba[2].getHealth(2) != 0 && goomba[3].getHealth(3) != 0)
            this.goomba[3].contactTo(goomba[2]);

    }

    public void backgroundMovement(){
        if (this.objx >= 0){
            this.backx1 = this.backx1 - this.moveBx;
            this.backx2 = this.backx2 - this.moveBx;
            this.objx = this.objx + this.moveBx;
        }

        if (this.backx1 == -screen) this.backx1 = screen;
        else if (this.backx2 == -screen) this.backx2 = screen;
        else if (this.backx1 == screen) this.backx1 = -screen;
        else if (this.backx2 == screen) this.backx2 = -screen;

        this.mushroom.deplacement();
        for (int i = 0; i <= 2; i++)
            this.blocks[i].deplacement();
        for (int i = 0; i <= 3; i++)
            this.itemBlocks[i].deplacement();
        for (int i = 0; i <= 3; i++)
            this.pipe[i].deplacement();
        for (int i = 0; i <= 3; i++)
            this.goomba[i].deplacement();
    }

    public void Drawing(Graphics g2){
        g2.drawImage(this.imgBack1, this.backx1, 0,screen,screenHeight, null);
        g2.drawImage(this.imgBack2, this.backx2, 0,screen,screenHeight, null);

        g2.drawImage(this.imgFloor, 0, Floor+20,screen, 78, null);

        g2.drawImage(this.imgLogo, 60-this.objx, 30, 360, 200, null);
        g2.drawImage(imgArrow, 700 -this.objx, 350, 50, 50, null);
        //g2.drawImage(imgCastle, 1500-this.objx, 200, 250, 200, null);
        g2.drawString("Description: Get to the Castle", 450 -this.objx, 60);
        g2.drawString("By: Mohamed Halat", 80-this.objx, 250);
        g2.drawString("World 1 - 1", 10, 20);
        g2.drawString(" time: " + (time++), 500, 20);

        g2.drawImage(this.mushroom.getImgMushroom(), this.mushroom.getX(), this.mushroom.getY(),30, 30, null);

        for (int i = 0; i <= 2; i++)
            g2.drawImage(this.blocks[i].getImgBlock(), this.blocks[i].getX(), this.blocks[i].getY(),36, 36, null);
        for (int i = 0; i <= 3; i++)
            g2.drawImage(this.itemBlocks[i].getImgItemBlock(), this.itemBlocks[i].getX(), this.itemBlocks[i].getY(),36, 36, null);
        for (int i = 0; i <= 3; i++)
            g2.drawImage(this.pipe[i].getImgPipe(),this.pipe[i].getX(), this.pipe[i].getY(),64,96,null);

        for (int i = 0; i <= 2; i++)
            g2.drawImage(this.goomba[i].walk("goomba",25), this.goomba[i].getX(), this.goomba[i].getY(), 40, 40, null);
    }

    //PainComponent
    public void paintComponent (Graphics g){
        super.paintComponent(g);
        Graphics g2 = (Graphics2D)g;
        this.mushroom.move();
        strMario = mario.health();

        if (strMario.equals("marioSmall") && checker){
            ceillingY -= 28;
            checker = false;
            addY = 28;
        }
        else if (strMario.equals("mario") && checker2){
            ceillingY += 28;
            checker2 = false;
        }
        
        if (this.mario.getJumpCounter() == -1){
        mario.setJump(0);
        
    }
        collisions();

        backgroundMovement();

        Drawing(g2);

        g2.drawImage(imgCoin, 805 -this.objx, 230, 30, 30, null);

        if (this.mario.getJump())
            g2.drawImage(this.mario.jump(strMario), this.mario.getX(), this.mario.getY(), 40, height, null);
        else
            g2.drawImage(this.mario.walk(strMario,25), this.mario.getX(), this.mario.getY(), 40, height, null);

        //g2.drawImage(imgCastleR, 1636 -this.objx , 200,112,200, null);
    }
}

package Mario.Characters;
import Mario.*;
import java.awt.*;
import javax.swing.*;
import Mario.Objects.Object;

/**
 * Write a description of class Character here.
 *
 * @author (your name)
 * @version (a version number or a date)
 */
public class Character
{
    private int width, height;
    private int x,y;
    public boolean walk, goRight;
    public int counter;

    public Character(int x, int y, int width, int height){
        this.x = x;
        this.y = y;
        this.width = width;
        this.height = height;
        this.counter = 0;
        this.walk = false;
        this.goRight = true;
    }

    //getters
    public int getX(){return x;}

    public int getY(){return y;}

    public int getWidth(){return width;}

    public int getHeight(){return height;}

    public int getCounter(){return counter;}

    //Setters
    public void setX(int x){this.x = x;}

    public void setY(int y){this.y = y;}

    public void setWalk(boolean walk){this.walk = walk;}

    public void setGoRight(boolean goRight){this.goRight = goRight;}

    public void setCounter(int counter){this.counter = counter;}

    //Methods
    public Image walk (String name, int amount){
        String str = name + "RightStill.png";
        ImageIcon icon;
        Image img;

        if (this.walk == false || Main.scene.getObjX() == -50){
            if (this.goRight == true) str = name + "RightStill.png";
            else str = name + "LeftStill.png";
            if (name == "goomba"){
                str = name+"Dead.png";
                Goomba.setHealth(0);
            }
        }
        else{  
            if (name == "goomba"){
                if (this.goRight == false)
                    this.x--;
                else
                    this.x++;
            }
            this.counter++;
            if (this.counter/amount==0)
                if (this.goRight) str = name + "RightStill.png";
                else str = name + "LeftStill.png";
            else 
            if (this.goRight) str = name + "Right.png";
            else str = name + "Left.png";
            if (this.counter  == 2*amount){
                this.counter = 0;}
        }
        icon = new 
        ImageIcon(str);
        return  img = icon.getImage();
    }

    public void deplacement(){
        if (Main.scene.getObjX() >= 0)
            this.x -= Main.scene.getMoveBx();
    }

    public boolean frontContact(Object object){
        if (this.x + this.width < object.getX()+5 
        || this.x >= object.getX() + 5
        || this.y + this.height  <= object.getY() + 5 
        || this.y >= object.getY() + object.getHeight())
            return false;
        return true;
    }

    public boolean backContact(Object object){
        if (this.x >= object.getWidth() + object.getX() -5
        || this.x + this.width <= object.getWidth() + object.getX() -10
        || this.y + this.height  <= object.getY() + 5 
        || this.y >= object.getY() + object.getHeight())
            return false;

        return true;
    }

    public boolean topContact(Object object){
        if (this.x + this.width <= object.getX() +5
        || this.x >= object.getX() + object.getWidth() -5
        || this.y + this.height <= object.getY() 
        || this.y + this.width >= object.getY())
            return false;
        return true;
    }

    public boolean bottomContact(Object object){
        if (this.x + this.width <= object.getX() + 5 
        || this.x >= object.getX() + object.getWidth() - 5
        || this.y + this.height <= object.getY() 
        || this.y <= object.getY() + object.getHeight())
            return false;

        return true;
    }

    public boolean closeTo (Object object){
        if (this.x >= object.getX() - this.width - 10 && this.x <= object.getX() + object.getWidth() + 10 && this.y + this.height >= object.getY() -10&& this.y <= object.getY()+ object.getHeight() + 10)
            return true;
        return false;
    }

    public boolean frontContact(Character character){
        if (this.x + this.width < character.getX()+5 
        || this.x >= character.getX() + 5
        || this.y + this.height  <= character.getY() + 5 
        || this.y >= character.getY() + character.getHeight())
            return false;
        return true;
    }

    public boolean backContact(Character object){
        if (this.x >= object.getWidth() + object.getX() -5
        || this.x + this.width <= object.getWidth() + object.getX() -10
        || this.y + this.height  <= object.getY() + 5 
        || this.y >= object.getY() + object.getHeight())
            return false;

        return true;
    }

    public boolean topContact(Character object){
        if (this.x + this.width <= object.getX() +5
        || this.x >= object.getX() + object.getWidth() -5
        || this.y + this.height <= object.getY() 
        || this.y + this.width >= object.getY())
            return false;
        return true;
    }

    public boolean bottomContact(Character object){
        if (this.x + this.width <= object.getX() + 5 
        || this.x >= object.getX() + object.getWidth() - 5
        || this.y + this.height <= object.getY() 
        || this.y <= object.getY() + object.getHeight())
            return false;

        return true;
    }

    public boolean closeTo (Character object){
        if (this.x >= object.getX() - this.width - 10 && this.x <= object.getX() + object.getWidth() + 10 && this.y + this.height >= object.getY() -10&& this.y <= object.getY()+ object.getHeight() + 10)
            return true;
        return false;
    }
}
